crawl		sneak
run		special/aux1
wallrun		run + jump into a wall (requires a few of attempts to success)
edge climb	walk above the ground into a edge

crawl to a edge to come higher

=============================
	-- register player style profile
player_style.register_profile({
	texture =	{"character.png"},
	visual = "mesh",
	visual_size = {x=1,y=1},
	collisionbox = {-0.35,0,-0.35,0.35,1.8,0.35},
	mesh = "character.b3d",
	diving = true,
	flying = true,
	animation = {
		stand={x=1,y=39,speed=30},
		walk={x=41,y=61,speed=30},
	},
	eye_height = 1.6,
	stepheight = 0.7,
	hotbar = "player_api_hotbar.png",
	hotbar_selected = "player_api_hotbar_selected.png",
})
=============================
	-- hurts until death or if the player drinks enough
player_style.thirst_to_death(player)
=============================
	-- deactivated player styles /animation/moves ...
player_style.player_attached[player_name] = something/nil
=============================
player_style.register_button({
	type="image_button",	nil , "image", "item_image"
	exit=true,		nil , true
	image="default_dirt.png",	nil, image, item
	name="dirt",		button name/id
	label="dirt text",		button label
	info="Dirts button",		infotext / tooltip
	action=function(user)	action
	end
})
=============================
player_style.register_environment_sound({
	node="default:water_flowing",	node	required
	sound="default_water_stream",	sound	required
	gain=2,				nil,number (default: 0.5)
	timeloop=4,			nil,number (default: 1)
	distance = 10,			nil,number (default: 10)
	min_y = -20,			nil,number (default: -31000)
	max_y = 50,			nil,number (default: 31000)
	count = 5,			nil,number (default: 1) [min count of nodes]
})

=============================
	-- returns player skin
player_style.get_player_skin(player)
	-- set player skin texture (set_properties)
player_style.set_player_skin(player,texture)
	-- restore to the player's selected skin
player_style.restore_player_skin(player)